scalar Map

input UpdateSiloDefinitionInput {
    id: ID!
    workspaceId: ID!

    name: String
    description: String

    subjectIDs: [ID!]
    siloData: String
}

type SiloScanConfig {
    cron: String!
}

type SiloDefinition {
    id: ID!
    name: String!
    description: String
    siloSpecification: SiloSpecification
    dataSources: [DataSource!]
    subjects: [Subject!]
    siloConfig: Map
    scanConfig: SiloScanConfig
}

input CreateSiloDefinitionInput {
    description: String
    siloSpecificationID: ID!
    workspaceID: ID!
    subjectIDs: [ID!]
    siloData: String
    name: String!
}

input SiloScanConfigInput {
    siloId: ID!

    """
    A cron string that can be used to schedule
    the scan, or empty string if automatic scanning
    is disabled.
    """
    cron: String!
}

extend type Mutation {
    createSiloDefinition(input: CreateSiloDefinitionInput): SiloDefinition
    updateSiloDefinition(input: UpdateSiloDefinitionInput): SiloDefinition
    deleteSiloDefinition(id: ID!): ID
    updateSiloScanConfig(input: SiloScanConfigInput!): SiloDefinition
}

extend type Workspace {
    siloDefinitions: [SiloDefinition!]
    siloDefinition(id: ID!): SiloDefinition
}