# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type DataSource { 
    id: ID! 
    siloDefinition: SiloDefinition! 
    properties: [Property!]
    description: String 
}

type Property { 
    id: ID! 
    categories: [Category!]
    dataSourceID: ID! 
    purposes: [Purpose!]
}

type SiloDefinition { 
    id: ID! 
    description: String 
    siloSpecification: SiloSpecification
    dataSources: [DataSource!]
}

type SiloSpecification {
    id: ID! 
    dockerImage: String
    schema: String
    name: String! 
    logoUrl: String
}

type Category { 
    id: ID! 
    name: String! 
}

type Purpose { 
    id: ID! 
    name: String!
}

input CreateSiloDefinitionInput { 
    description: String 
    siloSpecificationID: ID!
    workspaceID: ID! 
}

input CreateSiloSpecificationInput { 
    name: String! 
    logoURL: String
    dockerImage: String 
    workspaceID: ID!
}

input CreateDataSourceInput {
    siloDefinitionID: ID! 
    categoryIDs: [ID]
    purposeIDs: [ID]
    description: String
}

input UpdateSiloDefinitionInput { 
    id: ID! 
    description: String 
    siloSpecificationID: ID
}

input UpdateSiloSpecificationInput {
    id: ID! 
    dockerImage: String 
    schema: String
    name: String
    logoUrl: String
}

input UpdateDataSourceInput {
    id: ID! 
    siloDefinitionID: ID 
    categories: [ID!]
    purposes: [ID!]
    description: String 
}

input CreatePropertyInput {
    categories: [ID!]
    dataSourceID: ID! 
    purposes: [ID!]
}

input UpdatePropertyInput {
    categories: [ID!]
    dataSourceID: ID 
    purposes: [ID!]
}

extend type Query {
    siloDefinition(id: ID!): SiloDefinition
    dataSource(id: ID!): DataSource
    siloDefinitions(wsId: ID!): [SiloDefinition!]
    dataSources(wsId: ID!): [DataSource!]
    siloSpecification(id: ID!): SiloSpecification 
    siloSpecifications(wsId: ID!): [SiloSpecification!]
    property(id: ID!): Property
    properties(wsId: ID!): [Property!]
}

extend type Mutation { 
    createSiloDefinition(input: CreateSiloDefinitionInput): ID
    createDataSource(input: CreateDataSourceInput): ID
    createSiloSpecification(input: CreateSiloSpecificationInput): ID
    createProperty(input: CreatePropertyInput): ID

    updateSiloDefinition(input: UpdateSiloDefinitionInput): SiloDefinition
    updateDataSource(input: UpdateDataSourceInput): DataSource 
    updateSiloSpecification(input: UpdateSiloSpecificationInput): SiloSpecification
    updateProperty(input: UpdatePropertyInput): Property

    deleteSiloDefinition(id: ID!): ID 
    deleteDataSource(id: ID!): ID 
    deleteSiloSpecification(id: ID!): ID 
    deleteProperty(id: ID!): ID
    
}